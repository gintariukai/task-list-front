import {useCallback, useEffect, useState} from "react";
import axios from "axios";

import useLocalStorage from "hooks/useLocalStorage";

export default url => {

    const baseUrl = "https://api.realworld.io/api"; // http://localhost:8080/api/v1
    const [isLoading, setIsLoading] = useState(false);
    const [response, setResponse] = useState(null);
    const [error, setError] = useState(null);
    const [options, setOptions] = useState({});

    const [token] = useLocalStorage("token");
    // console.log("token", token);

    const doFetch = useCallback((options = {}) => {
        setOptions(options);
        setIsLoading(true);
    }, []);

    useEffect(() => {
        if (!isLoading) {
            return
        }

        const requestOptions = {
            ...options,
            ...{
                headers: {
                    authorization: token ? `Token ${token}` : ""
                }
            }
        }
        console.log("In useFetch. Trying to reach url: ", baseUrl + url);

        axios(baseUrl + url, requestOptions)
            .then(res => {
                console.log("Success", res)
                setResponse(res.data)
                setIsLoading(false)
            })
            .catch(error => {
                console.log("error", error)
                setError(error.response.data)
                setIsLoading(false)
            })
    }, [isLoading, options, url, token]);

    return [{isLoading, response, error}, doFetch]
}