import React, {useEffect, useState} from "react";
import {Link, useLocation, useParams, Navigate} from "react-router-dom";

import useFetch from "hooks/useFetch";

const Authentication = () => {

    const location = useLocation();
    const params = useParams();

    const isLogin = location.pathname === "/login";
    const pageTitle = isLogin ? "Sign in" : "Sign Up";
    const descriptionLink = isLogin ? "/register" : "/login";
    const descriptionText = isLogin ? "Need an account?" : "Have an account?";
    const apiUrl = isLogin ? "/users/login" : "/users";

    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [username, setUsername] = useState("");

    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);
    //console.log("email", email, password);

    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);
    // console.log("fff", isLogin);

    const handleSubmit = event => {
        event.preventDefault();
        // console.log("data", email, password);

        const user = isLogin ? {email, password} : {email, password, username}
        doFetch({
            method: "POST",
            data: {
                user
            }
        })
    };

    useEffect(() => {
        // console.log("response", response);
        if (!response) {
            return
        }
        localStorage.setItem("token", response.user.token);
        setIsSuccessfullSubmit(true)
    }, [response]);

    if (isSuccessfullSubmit) {
        return <Navigate to="/" />
    }

    return (<div className="auth-page">
        <div className="container page">
            <div className="row">
                <div className="col-md-6 offset-md-3 col-xs-12">
                    <h1 className="text-xs-center">
                        {pageTitle}
                    </h1>
                    <p className="text-xs-center">
                        <Link to={descriptionLink}>
                            {descriptionText}
                        </Link>
                    </p>
                    <form onSubmit={handleSubmit}>
                        <fieldset>
                            {!isLogin && (
                                <fieldset className="form-group">
                                    <input
                                        type="text"
                                        className="form-control form-control-lg"
                                        placeholder="Username"
                                        autoComplete="off"
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                    />
                                </fieldset>
                            )}
                            <fieldset className="form-group">
                                <input
                                    type="email"
                                    className="form-control form-control-lg"
                                    placeholder="Email"
                                    autoComplete="off"
                                    value={email}
                                    onChange={e => setEmail(e.target.value)}
                                />
                            </fieldset>
                            <fieldset className="form-group">
                                <input
                                    type="password"
                                    className="form-control form-control-lg"
                                    placeholder="Password"
                                    autoComplete="current-password"
                                    value={password}
                                    onChange={e => setPassword(e.target.value)}
                                />
                            </fieldset>
                            <button
                                className="btn btn-lg btn-primary pull-xs-right"
                                type="submit"
                                disabled={isLoading}
                            >
                                {pageTitle}
                            </button>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>)
}

export default Authentication;