import React, {useContext, useEffect, useState} from "react";
import {Navigate, useParams} from "react-router-dom";
import useFetch from "hooks/useFetch";
import ArticleForm from "components/articleForm";
import {CurrentUserContext} from "contexts/currentUser";

const EditArticle = () => {
    const params = useParams();
    const slug = params.slug;
    const [currentUserState] = useContext(CurrentUserContext);
    const apiUrl = `/articles/${slug}`;
    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl);
    const [
        {response: updateArticleResponse, error: updateArticleError},
        doUpdateArticle
    ] = useFetch(apiUrl);
    // console.log("slug", slug);
    const [initialValues, setInitialValues] = useState(null);
    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);

    const handleSubmit = article => {
        console.log("handleSubmit", article)
        doUpdateArticle({
            method: "PUT",
            data: {
                article
            }
        })
    }

    useEffect(() => {
        doFetchArticle()
    }, [doFetchArticle]);

    useEffect(() => {
        if (!fetchArticleResponse) {
            return;
        }

        setInitialValues({
            title: fetchArticleResponse.article.title,
            description: fetchArticleResponse.article.description,
            body: fetchArticleResponse.article.body,
            tagList: fetchArticleResponse.article.tagList
        })
    }, [fetchArticleResponse])

    useEffect(() => {
        if (!updateArticleResponse) {
            return;
        }

        setIsSuccessfulSubmit(true)
    }, [updateArticleResponse])

    if (currentUserState.isLoggedIn === false) {
        return <Navigate to="/" />
    }

    if (isSuccessfulSubmit) {
        return <Navigate to={`/articles/${slug}`} />
    }

    return (
        <ArticleForm
        onSubmit={handleSubmit}
        errors={(updateArticleError && updateArticleError.errors) || {}}
        initialValues={initialValues}
        />
    )
};

export default EditArticle;